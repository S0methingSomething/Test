name: Fully Automated BitLife File Extraction

on:
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab
  schedule:
    - cron: '0 2 * * 1' # Optional: runs automatically every Monday at 2 AM UTC

jobs:
  automated-extraction:
    # We are using the Linux runner, which requires KVM to be enabled.
    runs-on: ubuntu-latest

    steps:
      # Step 1: CRITICAL - Enable KVM hardware acceleration for the emulator
      - name: Enable KVM
        # THIS IS THE FIX: The 'with:' block has been removed as this action takes no inputs.
        uses: fast-actions/setup-kvm@v1

      # Step 2: Install 'apkeep' using a hardcoded URL for maximum reliability
      - name: Download and Install apkeep
        run: |
          echo "Hardcoding the download URL for apkeep v0.17.0 to ensure this step works."
          curl -L -o apkeep "https://github.com/EFForg/apkeep/releases/download/0.17.0/apkeep-x86_64-unknown-linux-gnu"
          chmod +x apkeep
          sudo mv apkeep /usr/local/bin/
          apkeep --version

      # Step 3: Download the latest official BitLife APK using apkeep
      - name: Download BitLife APK
        run: |
          echo "Downloading latest official BitLife APK..."
          apkeep -a com.candywriter.bitlife .

      # Step 4: Run Android 10 Emulator and the full script
      - name: Run Emulator, Install App, and Extract File
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29 # Android 10
          script: |
            echo "--- Installing downloaded BitLife APK ---"
            adb install com.candywriter.bitlife.apk

            echo "--- Launching BitLife to generate files ---"
            adb shell monkey -p com.candywriter.bitlife -c android.intent.category.LAUNCHER 1
            
            echo "--- Waiting 20 seconds for file generation ---"
            sleep 20

            echo "--- Simulating random taps for 1 minute to ensure app runs ---"
            adb shell monkey -p com.candywriter.bitlife --throttle 600 100

            echo "--- Force-stopping app to ensure data is written to disk ---"
            adb shell am force-stop com.candywriter.bitlife

            echo "--- Pulling 'MonetizationVars' file ---"
            adb pull /data/data/com.candywriter.bitlife/files/MonetizationVars .

      # Step 5: Verify and Use the Extracted File
      - name: Verify and Display Extracted File
        run: |
          if [ -f "MonetizationVars" ]; then
            echo "✅ SUCCESS: 'MonetizationVars' was extracted via full automation."
            echo "--- File Contents ---"
            cat MonetizationVars
            echo "---------------------"
          else
            echo "❌ ERROR: 'MonetizationVars' was NOT found. The automation script likely failed."
            exit 1
          fi

      # Step 6: (Optional) Upload the final result
      - name: Upload MonetizationVars as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: bitlife-monetization-vars
          path: MonetizationVars
